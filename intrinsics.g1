;; This file is loader before any other file.

(defmacro set (var val)
  (eval `(setq ,(eval var) ,val)))

(defmacro increment (var)
  (eval `(setq ,var (+ ,var 1))))

(defmacro lambda (params body)
  `(,params
    ,body))

(defmacro defun
    (name params body)
  (eval `(setq ,name
	       (lambda
		 ,params
		 ,body))))

(defmacro while (test body)
  (eval `(if ,test
	     (progn
	       ,body
	       (while ,test ,body)))))

(defmacro dotimes (bind body)
  (eval `(let ((,(car bind) 0))
	   (while (< ,(car bind) ,(car (cdr bind)))
	     (progn
	       ,body
	       (increment ,(car bind)))))))

(defmacro loop (iter body)
  (eval `(dotimes (i ,iter) ,body)))

(defmacro when (condition action)
  (if condition
      (eval action)))

(defmacro dbg (var)
  (eval `(message (cons var ,var))))
